<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="rights_basics.xsd"/>

  <xs:complexType name="copyrightusetype">
    <!--
    TODO: consider get rid of human elements.  DESTROY ALL HUMANS!
    TODO: use full URIs to designate rights values.
    -->
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="human"   type="typeoptionaltype"/>
        <xs:element name="machine" type="collapsedstringrequiredtype"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

<!-- the "machine" elements in "use" and "copyright"(?) are different than the others (no child elements) -->
  <xs:complexType name="machinetype"><!-- For the deeper non-"use" machine elements -->
    <xs:choice>
      <xs:element name="none"  type="xs:string"/>
      <xs:element name="world" type="xs:string"/>
    </xs:choice>
    <xs:attribute name="type" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="maybehuman">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="human" type="typeoptionaltype"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="allornothing">
    <xs:choice>
      <xs:element name="none"  type="trueemptytype"/>
      <xs:element name="world" type="trueemptytype"/>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="meatyoptions">
    <xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="none"  type="trueemptytype"/>
        <xs:element name="world" type="trueemptytype"/>
        <xs:sequence> <!-- if one of the above, then NONE of the below -->
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="world"   type="rulerequiredtype"/>
            <xs:element name="group"   type="ruleoptionaltype"/>
            <xs:element name="human"   type="typeoptionaltype"/>
            <xs:element name="person"  type="typerequiredtype"/>
            <xs:element name="agent"   type="typeoptionaltype"/>
            <xs:element name="embargoReleaseDate" type="xs:date"/>
          </xs:choice>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="readtype">
    <xs:complexContent>
      <xs:extension base="meatyoptions">
        <xs:attribute name="type" type="accesstypeattributeread" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="discovertype">
    <xs:complexContent>
      <xs:extension base="meatyoptions">
        <xs:attribute name="type" type="accesstypeattributediscover" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="readwithfile">
    <xs:complexContent>
      <xs:extension base="readtype">
        <xs:sequence>
          <xs:element name="file" type="accesstypeattributeread" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!--
  <xs:complexType name="discovertype">
    <xs:complexContent>
      <xs:extension base="cyborgtype">
        <xs:element name="machine" type="xs:string" minOccurs="1"/>
      </xs:extension>
      <xs:attribute name="type" type="accesstypeattributediscover" use="required"/>
    </xs:complexContent>
  </xs:complexType>
-->

</xs:schema>
